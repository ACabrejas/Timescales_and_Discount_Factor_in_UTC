--reduceFinal=Deterministic		# Final reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform
--r_replacement=ESComma		# Type of replacement: General, or Generational, ESComma, ESPlus, SSGA(T), EP(T), G3, MGG(T)
--initBounds=[0,1]		# -B : Bounds for initialization (MUST be bounded)
--reduceOffspring=Deterministic		# Offspring reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform
--surviveParents=20%		# Nb of surviving parents (percentage or absolute)
--reduceParents=Deterministic		# Parents reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform
--surviveOffspring=100%		# Nb of surviving offspring (percentage or absolute)
--printPop=0		# Print sorted pop. every gen.
--printFDCStat=0		# Print FDC coeff. every gen. 
--eraseDir=0		# erase files in dirName if any
--printBestStat=0		# Print Best/avg/stdev every gen.
--sigmaInit=0.2		# -s : Initial value for Sigmas (with a '%' -> scaled by the range of each variable)
--useEval=0		# Use nb of eval. as counter (vs nb of gen.)
--useTime=1		# Display time (s) every generation
--eliteType=1		# Strong (true) or weak (false) elitism (set elite to 0 for none)
--defaultPopSize=0		#  Size of default Population generated by existing signal plans
--isotropic=1		# -i : Isotropic self-adaptive mutation
--stDev=0		# -s : One self-adaptive stDev per variable
--acceptUnvalidIndividuals=0		# if true(1), unvalid individuals will stay in population until they're eliminated by replacement, elitism etc.
--Beta=0.0873		# -b : Beta
--freshIndividuals=0		# refresh the population with fresh Individuals (percentage, DO NOT USE % BEHIND VALUE)
--regenerationIndicator=0.004		# refreshes the population, if calculated indicator is below
--replacement=General		# -R : Replacement: Comma, Plus or EPTour(T), SSGAWorst, SSGADet(T), SSGAStoch(t)
--weakElitism=1		# -w : Old best parent replaces new worst offspring *if necessary*
--elite=1		# Nb of elite parents (percentage or absolute)
--nbOffspring=250%		# -O : Nb of offspring (percentage or absolute)
--correl=0		# -c : Use correlated mutations
--popSize=100		# -P : Population Size
--selection=DetTour(2)		# -S : Selection: DetTour(T), StochTour(t), Roulette, Ranking(p,e) or Sequential(ordered/unordered)
--fileBestStat=0		# Output bes/avg/std to file (if 1, make sure option printBestStat=1)
--uchromosomxoverRate=5		# -A : Relative rate for uniform chromosom crossover
--epsilon=0.1		# -e : Half-size of interval for Uniform Mutation
--uniformMutRate=0		# -u : Relative rate for uniform mutation
--uxoverRate=1		# -A : Relative rate for uniform crossover
--alpha=0.7		# -a : Bound for factor of linear recombinations
--segmentRate=0		# -s : Relative rate for segment crossover
--hypercubeRate=0		# -A : Relative rate for hypercube crossover
--crossStdev=intermediate		# -S : Recombination of mutation strategy parameters (intermediate, discrete or none)
--TauLoc=1		# -l : Local Tau (before normalization)
--TauGlob=1		# -g : Global Tau (before normalization)
--pNormal=0.7		# -s : Proba. to change each variable for Gaussian mutation
--detMutRate=1		# -d : Relative rate for deterministic uniform mutation
--normalMutRate=0		# -d : Relative rate for Gaussian mutation
--sigma=0.2		# -s : Sigma (fixed) for Gaussian mutation
--pMut=0.9		# -M : Probability of Mutation
--bestStatePopSize=5		# Size of Population to start with (i.e. from the last run)
--recomputeFitness=1		# -r : Recompute the fitness after re-loading the pop.?
--maxGen=100		# -G : Maximum number of generations () = none)
--plotFDCStat=0		# Plot FDC coeff. every gen. (if 1, make sure option printFDC=1)
--fileFDCStat=0		# Output FDC coeff. every gen (if 1, make sure option printFDC=1)
--plotBestStat=0		# Plot Best/avg Stat (if 1, make sure option printBestStat=1)
--plotHisto=0		# Plot histogram of fitnesses
--objectBounds=[0,1]		# -B : Bounds for variables
--operator=SGA		# -o : Description of the operator (SGA only now)
--pCross=0.9		# -C : Probability of Crossover
--targetFitness=0		# -T : Stop when fitness reaches
--steadyGen=25		# -s : Number of generations with no improvement
--minGen=20		# -g : Minimum number of generations
--maxEval=0		# -E : Maximum number of evaluations (0 = none)
--stopOnUnknownParam=0		# Stop if unkown param entered
--offsetOptimization=0		# do the OffsetOptimization
--seed=42		# -S : Random number seed
--galop=0		# Uses the GALOP-Code (1), DPA-Code (0)
--rescue=0		# Rescue unvalid chromosoms (only in GALOP-Code)
